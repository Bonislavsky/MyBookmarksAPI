<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyBookmarksAPI</name>
    </assembly>
    <members>
        <member name="M:MyBookmarksAPI.Controllers.BookmarkController.GetBookmarks(System.Int64,System.String,System.Boolean)">
            <summary>
            Get a list of all bookmark
            </summary>
            <returns></returns>
            <response code="200">Return List bookmarks</response>
            <response code="404">If bookmarks by folderid not found</response>
            <response code="400">Sort parameter not found</response> 
        </member>
        <member name="M:MyBookmarksAPI.Controllers.BookmarkController.GetBookmark(System.Int64)">
            <summary>
            Get a Bookmark by id 
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return bookmark</response>
            <response code="404">If bookmarks by id not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.BookmarkController.EditBookmark(System.Int64,MyBookmarksAPI.Domain.DtoModel.BookmarkDtoModel.BookmarkUpdateDto)">
             <summary>
             Changing the bookmark's data
             </summary>
             <remarks>
             Sample request:
                 
                 id = 1
                 Put
                 {
                       "Id": 1,
                       "name": "nameexemple"
                       "url": "https://www.google.com/"
                 }
            
             </remarks>
             <param name="id"></param>
             <param name="model"></param>
             <returns></returns>
             <response code="200">Folder data updated</response>
             <response code="404">If folder by id not found</response>
             <response code="400">input error</response> 
        </member>
        <member name="M:MyBookmarksAPI.Controllers.BookmarkController.CreateFolder(MyBookmarksAPI.Domain.DtoModel.BookmarkDtoModel.BookmarkCreateDto)">
             <summary>
             Creates a bookmark
             </summary>
             <param name="model"></param>
             <remarks>
             Sample request:
            
                 Post
                 {
                       "name": "harry potter",
                       "url": "https://www.google.com/",
                       "folderId": 1
                 }
            
             </remarks>
             <returns> A new created Bookmark</returns>
             <response code="201">Returns the new created bookmark</response>
             <response code="404">If folder by folderId not found</response>
             <response code="400">If url incorrect</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.BookmarkController.DeleteBookmark(System.Int64)">
            <summary>
            Delete bookmark
            </summary>
            <param name="id"></param>
            <returns></returns>       
            <response code="404">If bookmark by id not found</response>
            <response code="204">bookmark deleted</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.FolderController.GetFolders(System.Int64,System.String,System.Boolean)">
            <summary>
            Get a list of all folders
            </summary>
            <returns></returns>
            <response code="200">Return List folder`s</response>
            <response code="404">If folder by userid not found</response>
            <response code="400">Sort parameter not found</response> 
        </member>
        <member name="M:MyBookmarksAPI.Controllers.FolderController.GetFolderWithBookmark(System.Int64)">
            <summary>
            Get a Folder by Id with bookmark
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return folder</response>
            <response code="404">If folder by id not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.FolderController.GetFolderWithoutBookmark(System.Int64)">
            <summary>
            Get a Folder by Id without bookmark
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Return folder</response>
            <response code="404">If folder by id not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.FolderController.EditFolder(System.Int64,MyBookmarksAPI.Domain.DtoModel.FolderDtoModel.FolderUpdateDto)">
             <summary>
             Changing the folder's data
             </summary>
             <remarks>
             Sample request:
                 
                 id = 1
                 Put
                 {
                       "Id": 1,
                       "name": "nameexemple"
                 }
            
             </remarks>
             <param name="id"></param>
             <param name="model"></param>
             <returns></returns>
             <response code="200">Folder data updated</response>
             <response code="404">If folder by id not found</response>
             <response code="400">input error</response> 
        </member>
        <member name="M:MyBookmarksAPI.Controllers.FolderController.CreateFolder(MyBookmarksAPI.Domain.DtoModel.FolderDtoModel.FolderCreateDto)">
             <summary>
             Creates a Folder
             </summary>
             <param name="model"></param>
             <remarks>
             Sample request:
            
                 Post
                 {
                       "userId": "1,
                       "name": "Movie"
                 }
            
             </remarks>
             <returns> A new created Folder</returns>
             <response code="201">Returns the new created Folder</response>
             <response code="404">If userId was not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.FolderController.DeleteFolder(System.Int64)">
            <summary>
            Delete Folder
            </summary>
            <param name="id"></param>
            <returns></returns>       
            <response code="404">If folder by id not found</response>
            <response code="204">Folder deleted</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.GetUsers">
            <summary>
            Get a list of all users
            </summary>
            <returns></returns>
            <response code="200">Return List user`s</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.GetUser(System.Int64)">
            <summary>
            Get a User by Id BUT not folders
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="404">If user by id not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.GetAllDataUser(System.Int64)">
            <summary>
            Get a User by Id with folders
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="404">If user by id not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.EditUserPassword(System.Int64,MyBookmarksAPI.Domain.DtoModel.UserDtoModel.UserChangePassword)">
             <summary>
             Changing the user's password
             </summary>
             <remarks>
             Sample request:
                 
                 id = 1
                 Put
                 {
                       "Id": 1
                       "CurrentPassword": "exemple123",
                       "password": "newexemple",
                       "passwordConfirme": "newexemple"
                 }
            
             </remarks>
             <param name="id"></param>
             <param name="model"></param>
             <returns></returns>
             <response code="404">If user by id not found</response>
             <response code="400">input error</response> 
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.EditUser(System.Int64,MyBookmarksAPI.Domain.DtoModel.UserDtoModel.UserUpdateDto)">
             <summary>
             Changing the user's data
             </summary>
             <remarks>
             Sample request:
                 
                 id = 1
                 Put
                 {
                       "Id": 1
                       "email": "exemple@gmaol.com",
                       "name": "nameexemple",
                 }
            
             </remarks>
             <param name="id"></param>
             <param name="model"></param>
             <returns></returns>
             <response code="200">User data updated</response>
             <response code="404">If user by id not found</response>
             <response code="400">input error</response> 
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.CreateUser(MyBookmarksAPI.Domain.DtoModel.UserDtoModel.UserCreateDto)">
             <summary>
             Creates a User
             </summary>
             <param name="model"></param>
             <remarks>
             Sample request:
            
                 Post
                 {
                       "email": "Exemple@gmail.com",
                       "password": "exemple123",
                       "passwordConfirme": "exemple123",
                       "name": "Tania"
                 }
            
             </remarks>
             <returns> A new created User</returns>
             <response code="201">Returns the new created User</response>
             <response code="400">If email already registered</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.VerifyUser(System.String,System.String)">
             <summary>
             Login user into a system
             </summary>
             <param name="email"></param>
             <param name="password"></param>
             <remarks>
             Sample request:
            
                 Get
                 {
                       "email": "Exemple@gmail.com",
                       "password": "exemple123",
                 }
            
             </remarks>
             <returns></returns>
             <response code="200">Successful operation</response>
             <response code="400">Invalid password supplied</response>
             <response code="404">If user by id not found</response>
        </member>
        <member name="M:MyBookmarksAPI.Controllers.UserController.DeleteUser(System.Int64)">
            <summary>
            Delete User
            </summary>
            <param name="id"></param>
            <returns></returns>       
            <response code="404">If user by id not found</response>
            <response code="204">User deleted</response>
        </member>
    </members>
</doc>
